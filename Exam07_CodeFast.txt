===========================================================================================
	1) take a ASP.NET Core Web App (Model-View-Controller)
Name the project. 
Framework: .Net Core 3.1
Authentication type: none
Uncheck Configure for HTTPS

===========================================================================================
	2) Add nuGet Packages
Install-Package Microsoft.EntityFrameworkCore -Version 3.1.32
Install-Package Microsoft.EntityFrameworkCore.Design -Version 3.1.32
Install-Package Microsoft.EntityFrameworkCore.SqlServer -Version 3.1.32
Install-Package Microsoft.EntityFrameworkCore.Tools -Version 3.1.32


===========================================================================================
	3) Add Models.....
    public class RoomType
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

public class RoomDetails
{
    public RoomDetails()
    {
    }
    public int RoomDetailsId { get; set; }
    public int HotelBookingId { get; set; }
    public virtual HotelBooking HotelBooking { get; private set; }
    public string RoomType { get; set; }
    public int Occupents { get; set; }
    public decimal RatePerNight { get; set; }
}

 public class HotelBooking
 {
     [Key]
     public int Id { get; set; }

     public string Name { get; set; } = "";

     public string Gender { get; set; } = "";

     public DateTime CheckInDate { get; set; }

     public DateTime CheckOutDate { get; set; }

     public int TotalRoom { get; set; }

     public bool IsMember { get; set; }

     public virtual List<RoomDetails> RoomDetails { get; set; } = new List<RoomDetails>();

     public string PhotoUrl { get; set; }

     [Display(Name = "NID Photo")]
     [NotMapped]
     public IFormFile NIDPhoto { get; set; }
 }


===========================================================================================
	4) Add Data: MyDbContext.cs
    public class MyDbContext : DbContext
    {
        public MyDbContext(DbContextOptions<MyDbContext> options) : base(options)
        {

        }

        public DbSet<HotelBooking> HotelBookings { get; set; }
        public DbSet<RoomDetails> RoomDetails { get; set; }
        public DbSet<RoomType> RoomTypes { get; set; }
    }

===========================================================================================
	5) In appsettings.json add this code:
"ConnectionStrings": {
  "DbCon": "Server=(localdb)\\mssqllocaldb; Database=ASPCoreMasterDetails; Trusted_Connection=true; MultipleActiveResultSets=True;"
}
===========================================================================================
	6) In Startup.cs add this code to ConfigureServices:
 IMvcBuilder mvcBuilder = services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_3_0);

 services.AddDbContext<MyDbContext>(options =>
 options.UseSqlServer(Configuration.GetConnectionString("DbCon")));
===========================================================================================
===========================================================================================
	7) Add Migration: Add-Migration ddd
	Updete-database

===========================================================================================	
===========================================================================================
===========================================================================================	

9) Controllers folder: Add Controller (Empty) Name=> MasterDetailsController
public class BookingController : Controller
{
    private readonly MyDbContext _context;
    private readonly IWebHostEnvironment _webHost;

    public BookingController(MyDbContext context, IWebHostEnvironment webHost)
    {
        _context = context;
        _webHost = webHost;
    }

    public IActionResult Index()
    {
        List<HotelBooking> hotelBookings;
        hotelBookings = _context.HotelBookings.ToList();
        return View(hotelBookings);
    }

    [HttpGet]
    public IActionResult Create()
    {
        HotelBooking hotelBookings = new HotelBooking();
        hotelBookings.RoomDetails.Add(new RoomDetails() { RoomDetailsId = 1 });
        ViewBag.RoomTypes = _context.RoomTypes.Select(r=>r.Name).ToList();
        return View(hotelBookings);
    }
    [HttpPost]
    public IActionResult Create(HotelBooking hotelBookings)
    {
        hotelBookings.RoomDetails.RemoveAll(n => n.RatePerNight == 0);
        string uniqueFileName = GetUploadedFileName(hotelBookings);
        hotelBookings.PhotoUrl = uniqueFileName;
        _context.Add(hotelBookings);
        _context.SaveChanges();
        return RedirectToAction("Index");

    }

    private string GetUploadedFileName(HotelBooking hotelBookings)
    {
        string uniqueFileName = null;
        if (hotelBookings.NIDPhoto != null)
        {
            string uploadFolder = Path.Combine(_webHost.WebRootPath, "Images");
            uniqueFileName = Guid.NewGuid().ToString() + "_" + hotelBookings.NIDPhoto.FileName;
            string filePath = Path.Combine(uploadFolder, uniqueFileName);
            using (var fileStream = new FileStream(filePath, FileMode.Create))
            {
                hotelBookings.NIDPhoto.CopyTo(fileStream);
            }
        }
        return uniqueFileName;
    }
    [HttpGet]
    public IActionResult Edit(int id)
    {
        ViewBag.RoomTypes = _context.RoomTypes.Select(r => r.Name).ToList();
        var applicant = _context.HotelBookings
    .Include(a => a.RoomDetails)
    .FirstOrDefault(a => a.Id == id);

        if (applicant == null)
        {
            return NotFound();
        }

        return View(applicant);
    }



    [HttpPost]
    [ValidateAntiForgeryToken]
    public async Task<IActionResult> Edit(HotelBooking hotelBookings, string DeletedRoom)
    {
        if (ModelState.IsValid)
        {
            if (hotelBookings.NIDPhoto != null)
            {
                string uniqueFileName = GetUploadedFileName(hotelBookings);
                hotelBookings.PhotoUrl = uniqueFileName;
            }

            _context.Attach(hotelBookings);

            if (!string.IsNullOrEmpty(DeletedRoom))
            {
                var idsToDelete = DeletedRoom.Split(',')
                    .Where(id => int.TryParse(id, out _))
                    .Select(int.Parse)
                    .ToList();

                foreach (var id in idsToDelete)
                {
                    var experience = await _context.RoomDetails.FindAsync(id);
                    if (experience != null)
                    {
                        _context.RoomDetails.Remove(experience);
                    }
                }
            }
            await _context.SaveChangesAsync();

            foreach (var experience in hotelBookings.RoomDetails)
            {
                if (experience.RoomDetailsId == 0)
                {
                    _context.Entry(experience).State = EntityState.Added;
                }
                else
                {
                    _context.Entry(experience).State = EntityState.Modified;
                }
            }

            _context.Entry(hotelBookings).State = EntityState.Modified;

            await _context.SaveChangesAsync();


            return RedirectToAction(nameof(Index));
        }

        return View(hotelBookings);
    }


    public IActionResult Details(int id)
    {
        HotelBooking hotelBookings = _context.HotelBookings
            .Include(e => e.RoomDetails)
            .Where(a => a.Id == id)
            .FirstOrDefault();
        return View(hotelBookings);
    }
    [HttpGet]
    public IActionResult Delete(int id)
    {
        HotelBooking hotelBookings = _context.HotelBookings
           .Include(e => e.RoomDetails)
           .Where(a => a.Id == id)
           .FirstOrDefault();
        return View(hotelBookings);
    }
    [HttpPost]
    public IActionResult Delete(HotelBooking hotelBookings)
    {
        _context.Attach(hotelBookings);
        _context.Entry(hotelBookings).State = EntityState.Deleted;
        _context.SaveChanges();
        return RedirectToAction("Index");
    }
}
===========================================================================================
Code for index page:(Rezoy View)

@model IEnumerable<HotelCore.Models.HotelBooking>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckInDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckOutDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalRoom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsMember)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhotoUrl)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CheckInDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CheckOutDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalRoom)
            </td>
            <td>
                @Html.ValueFor(modelItem => item.IsMember)
            </td>
            <td>
                <img src="~/Images/@item.PhotoUrl" class="avatar" alt="" height="40" width="40" asp-append-version="true" />
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


===========================================================================================
Code for Create page:

@model HotelCore.Models.HotelBooking

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>HotelBooking</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" id="BookingForm" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <select asp-for="@Model.Gender" class="form-control">
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CheckInDate" class="control-label"></label>
                <input asp-for="CheckInDate" class="form-control" />
                <span asp-validation-for="CheckInDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CheckOutDate" class="control-label"></label>
                <input asp-for="CheckOutDate" class="form-control" />
                <span asp-validation-for="CheckOutDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalRoom" class="control-label"></label>
                <input asp-for="TotalRoom" class="form-control" />
                <span asp-validation-for="TotalRoom" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsMember" /> @Html.DisplayNameFor(model => model.IsMember)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="PhotoUrl" class="control-label"></label>
                <div class="custom-file">
                    <input asp-for="NIDPhoto" class="custom-file-input" id="customFile" onchange="document.getElementById('PreviewPhoto').src = window.URL.createObjectURL(this)" />
                    <label class="custom-file-label" for="customFile">Choose Image</label>
                </div>
                <span asp-validation-for="PhotoUrl" class="text-danger"></span>
            </div>


            <div class="col-md-12">
                <table id="RoomTable" class="table table-striped table-sm">
                    <thead>
                        <tr>
                            <th>Room Type</th>
                            <th>Ocupents</th>
                            <th>Rate Per Night</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.RoomDetails.Count; i++)
                        {
                            <tr>
                                <td>
                                    <select asp-for="@Model.RoomDetails[i].RoomType" class="form-control">
                                        @foreach (var roomType in ViewBag.RoomTypes)
                                        {
                                            <option value="@roomType">@roomType</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <input asp-for="@Model.RoomDetails[i].Occupents" class="form-control" />
                                </td>
                                <td>
                                    <input asp-for="@Model.RoomDetails[i].RatePerNight" class="form-control" />
                                    <span asp-validation-for="@Model.RoomDetails[i].RatePerNight" class="text-danger"></span>
                                </td>
                                <td>
                                    <button id="btndummy-@i" type="button" class="btn btn-sm invisible">Dummy</button>
                                    <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)" style="left:94%; position:absolute;">Add</button>
                                    <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger visible" onclick="DeleteItem(this)" style="left:88%; position:absolute;">Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>

            <input type="hidden" id="hdnLastIndex" value="0" />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script type="text/javascript">

        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });

        function DeleteItem(btn) {
            var table = document.getElementById("RoomTable");
            var Nrows = table.tBodies[0].rows.length;
            var rowIndex = $(btn).closest('tr').index();
            if (Nrows > 1) {
                $(btn).closest('tr').remove();
            }

            for (var r = rowIndex + 1; r < Nrows; r++) {
                var NwIdx = r - 1;
                var oldexpid = "input[name='RoomDetails[" + r + "].RoomType']";
                $(oldexpid).attr('id', "RoomDetails_" + NwIdx + "__RoomType");
                $(oldexpid).attr('name', "RoomDetails[" + NwIdx + "].RoomType");
                var spC = "span[data-valmsg-for='" + "RoomDetails[" + r + "].RoomType" + "']";
                $(spC).attr('data-valmsg-for', "RoomDetails[" + NwIdx + "].RoomType");

                var olddsid = "input[name='RoomDetails[" + r + "].Occupents']";
                $(olddsid).attr('id', "RoomDetails_" + NwIdx + "__Occupents");
                $(olddsid).attr('name', "RoomDetails[" + NwIdx + "].Occupents");
                var spC = "span[data-valmsg-for='" + "RoomDetails[" + r + "].Occupents" + "']";
                $(spC).attr('data-valmsg-for', "RoomDetails[" + NwIdx + "].Occupents");

                var oldywid = "input[name='RoomDetails[" + r + "].RatePerNight']";
                $(oldywid).attr('id', "RoomDetails_" + NwIdx + "__RatePerNight");
                $(oldywid).attr('name', "RoomDetails[" + NwIdx + "].RatePerNight");
                var spC = "span[data-valmsg-for='" + "RoomDetails[" + r + "].RatePerNight" + "']";
                $(spC).attr('data-valmsg-for', "RoomDetails[" + NwIdx + "].RatePerNight");
            }
        }

        function AddItem(btn) {

            var table = document.getElementById("RoomTable");
            var rows = table.getElementsByTagName('tr');

            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowIdx = document.getElementById('hdnLastIndex').value;

            var nextrowIdx = eval(lastrowIdx) + 1;

            document.getElementById('hdnLastIndex').value = nextrowIdx;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var btnAddID = btn.id;
            var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');

            var delbtn = document.getElementById(btnDeleteid);
            delbtn.classList.add("visible");
            delbtn.classList.remove("invisible");

            var addbtn = document.getElementById(btnAddID);
            addbtn.classList.remove("visible");
            addbtn.classList.add("invisible");


            rebindValidators();
        }

        function rebindValidators() {
            var $form = $(".BookingForm");
            $form.unbind();
            $form.data("validator", null);
            $.validator.unobtrusive.parse($form);
            $form.validate($form.data("unobtrusiveValidation").options);
        }

    </script>
}



===========================================================================================
Code for Delete Page:
@model HotelCore.Models.HotelBooking

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>HotelBooking</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CheckInDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CheckInDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CheckOutDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CheckOutDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TotalRoom)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TotalRoom)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsMember)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsMember)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PhotoUrl)
        </dt>
        <dd class = "col-sm-10">
            <img src="~/Images/@Model.PhotoUrl" class="avatar" alt="" height="40" width="40" asp-append-version="true" />
        </dd>
    </dl>

    <div class="col-md-12">
        <table id="RoomTable" class="table table-striped table-sm">
            <thead>
                <tr>
                    <th>Room Type</th>
                    <th>Ocupents</th>
                    <th>Rate Per Night</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.RoomDetails.Count; i++)
                {
                    <tr>
                        <td>
                            <input asp-for="@Model.RoomDetails[i].RoomType" class="form-control-plaintext" readonly />
                        </td>
                        <td>
                            <input asp-for="@Model.RoomDetails[i].Occupents" class="form-control-plaintext" readonly />
                        </td>
                        <td>
                            <input asp-for="@Model.RoomDetails[i].RatePerNight" class="form-control-plaintext" readonly />
                        </td>
                        <td>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>

===========================================================================================
Code for Edit page:
@model HotelCore.Models.HotelBooking

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>HotelBooking</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <input asp-for="Gender" class="form-control" />
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CheckInDate" class="control-label"></label>
                <input asp-for="CheckInDate" class="form-control" />
                <span asp-validation-for="CheckInDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CheckOutDate" class="control-label"></label>
                <input asp-for="CheckOutDate" class="form-control" />
                <span asp-validation-for="CheckOutDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalRoom" class="control-label"></label>
                <input asp-for="TotalRoom" class="form-control" />
                <span asp-validation-for="TotalRoom" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsMember" /> @Html.DisplayNameFor(model => model.IsMember)
                </label>
            </div>

            <div class="form-group">
                <label asp-for="PhotoUrl" class="control-label"></label>
                <div class="custom-file">
                    <input type="file" asp-for="NIDPhoto" class="custom-file-input" id="customFile" onchange="previewFile(this)" />
                    <label class="custom-file-label" for="customFile">Choose Image</label>
                </div>
                <span asp-validation-for="PhotoUrl" class="text-danger"></span>
            </div>


            <h3>Booked Rooms</h3>
            <input type="hidden" id="deletedRoom" name="DeletedRoom" value="" />
            <table class="table">
                <thead>
                    <tr>
                        <th>Room Type</th>
                        <th>Ocupents</th>
                        <th>Rate Per Night</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.RoomDetails.Count; i++)
                    {
                        <tr data-room-id="@Model.RoomDetails[i].RoomDetailsId">
                            <td>
                                @Html.HiddenFor(model => model.RoomDetails[i].RoomDetailsId)
                                @Html.HiddenFor(model => model.RoomDetails[i].HotelBookingId)
                                @* @Html.EditorFor(model => model.RoomDetails[i].RoomType, new { htmlAttributes = new { @class = "form-control" }})  *@
                                                       <select asp-for="@Model.RoomDetails[i].RoomType" class="form-control">
                @foreach (var roomType in ViewBag.RoomTypes)
                {
                    <option value="@roomType" selected="@(Model.RoomDetails[i].RoomType == roomType ? "selected" : null)">@roomType</option>
                }
            </select>
                            </td>
                            <td>@Html.EditorFor(model => model.RoomDetails[i].Occupents, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td>@Html.EditorFor(model => model.RoomDetails[i].RatePerNight, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td><button type="button" onclick="removeRow(this, @Model.RoomDetails[i].RoomDetailsId)" class="btn btn-danger">Remove</button></td>
                        </tr>
                    }
                </tbody>
            </table>




            <div class="form-group">
                <button type="button" onclick="addRow()" class="btn btn-secondary">Add Experience</button>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>


        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function addRow() {
            var index = $("table tbody tr").length;
            var newRow = `<tr data-experience-id="0">
                                <td>
                                            <input type="hidden" name="RoomDetails[${index}].RoomDetailsId" value="0" />
                                            <input type="hidden" name="RoomDetails[${index}].HotelBookingId" value="@Model.Id" />
                                                    <select name="RoomDetails[${index}].RoomType" class="form-control">
        @foreach (var roomType in ViewBag.RoomTypes)
        {
                                            <option value="@roomType">@roomType</option>
        }
                                </select>
                                </td>
                                        <td><input type="text" name="RoomDetails[${index}].Occupents" class="form-control" /></td>
                                        <td><input type="number" name="RoomDetails[${index}].RatePerNight" class="form-control" /></td>
                                        <td><button type="button" onclick="removeRow(this, 0)"  class="btn btn-danger">Remove</button></td>
                            </tr>`;
            $("table tbody").append(newRow);
        }

        function removeRow(button, RoomDetailsId) {
            $(button).closest('tr').remove();
            var deletedRoom = $("#deletedRoom").val();
            if (RoomDetailsId != 0) {
                if (deletedRoom) {
                    deletedRoom += "," + RoomDetailsId;
                } else {
                    deletedRoom = RoomDetailsId;
                }
            }
            $("#deletedRoom").val(deletedRoom);
        }

    </script>
}


===========================================================================================
Code for Details Page:
@model HotelCore.Models.HotelBooking

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>HotelBooking</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CheckInDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CheckInDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CheckOutDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CheckOutDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TotalRoom)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TotalRoom)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsMember)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsMember)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PhotoUrl)
        </dt>
        <dd class = "col-sm-10">
            <img src="~/Images/@Model.PhotoUrl" class="avatar" alt="" height="40" width="40" asp-append-version="true" />
        </dd>
    </dl>


    <div class="col-md-12">
        <table id="RoomTable" class="table table-striped table-sm">
            <thead>
                <tr>
                    <th>Room Type</th>
                    <th>Ocupents</th>
                    <th>Rate Per Night</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.RoomDetails.Count; i++)
                {
                    <tr>
                        <td>
                            <input asp-for="@Model.RoomDetails[i].RoomType" class="form-control-plaintext" readonly />
                        </td>
                        <td>
                            <input asp-for="@Model.RoomDetails[i].Occupents" class="form-control-plaintext" readonly />
                        </td>
                        <td>
                            <input asp-for="@Model.RoomDetails[i].RatePerNight" class="form-control-plaintext" readonly />
                        </td>
                        <td>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>


===========================================================================================
	10) Add wwwroot Folder : Images

===========================================================================================
	11) Add Shared Folder : _layout.cshtml

 <li class="nav-item">
     <a class="nav-link text-dark" asp-area="" asp-controller="MasterDetails" asp-action="Index">Applicant</a>
 </li>

===========================================================================================